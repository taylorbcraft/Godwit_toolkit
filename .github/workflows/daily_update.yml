name: Weekly GPS Update and Deploy to Shinyapps.io

on:
  schedule:
    - cron: '0 0 * * 1'  # Runs once a week, every Monday at midnight UTC
  push:
    branches:
      - main  # Deploy on push to main branch

jobs:
  update-gps-data:
    runs-on: ubuntu-20.04  # Use stable OS

    steps:
      # step 1: check out repository
      - name: Check out repo
        uses: actions/checkout@v3

      # step 2: install system dependencies for move, sf, and Quarto
      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libgdal-dev libproj-dev libgeos-dev libudunits2-dev gdal-bin
          wget -qO- https://quarto.org/download/latest/quarto-linux-amd64.deb > quarto.deb
          sudo dpkg -i quarto.deb

      # step 3: install R base (default to 4.3.3) and install rsconnect
      - name: Install R and rsconnect
        run: |
          sudo apt-get update
          sudo apt-get install -y r-base=4.3.3-1
          Rscript -e "install.packages('rsconnect', repos='https://cloud.r-project.org')"

      # step 4: dynamically get latest supported R version (if possible)
      - name: Set latest supported R version
        run: |
          SUPPORTED_R=$(Rscript -e 'versions <- tryCatch(rsconnect::showVersions("shinyapps.io"), error=function(e) NA); if (!is.na(versions)) cat(max(versions$r_version)) else cat("4.3.3")')

          echo "Using R version $SUPPORTED_R"
          
          # Install the dynamically selected R version
          sudo apt-get update
          sudo apt-get install -y r-base=$SUPPORTED_R-1 || echo "Falling back to R 4.3.3"

      # step 5: install required R packages dynamically
      - name: Install R packages
        run: Rscript -e "install.packages(c('rnaturalearthdata','rnaturalearth','shiny','sf', 'cronR', 'move', 'dplyr', 'purrr', 'data.table', 'zoo', 'lubridate', 'mapview', 's2', 'rsconnect','leaflet','leaflet.extras','leafgl','terra','ggplot2'), repos='https://cloud.r-project.org')"

      # step 6: run R scripts to update location data
      - name: Run location_data.R
        run: Rscript location_data.R

      - name: Run filter_location_data.R for Donana
        run: Rscript Donana_flooding/filter_location_data.R

      - name: Run filter_location_data.R for GPI
        run: Rscript GPI/filter_location_data.R

      - name: Run filter_location_data.R for Senegal Delta
        run: Rscript Senegal_delta/filter_location_data.R

      # step 7: check R environment before deployment
      - name: Check R environment
        run: Rscript -e "sessionInfo()"

      # step 8: deploy each app separately
      - name: Deploy Donana_flooding app to shinyapps.io
        run: |
          Rscript -e "library(rsconnect);
                      rsconnect::setAccountInfo(name = '${{ secrets.SHINYAPPS_ACCOUNT }}',
                                                token = '${{ secrets.SHINYAPPS_TOKEN }}',
                                                secret = '${{ secrets.SHINYAPPS_SECRET }}');
                      rsconnect::deployApp(appDir = 'Donana_flooding', forceUpdate = TRUE)"
        env:
          SHINYAPPS_ACCOUNT: ${{ secrets.SHINYAPPS_ACCOUNT }}
          SHINYAPPS_TOKEN: ${{ secrets.SHINYAPPS_TOKEN }}
          SHINYAPPS_SECRET: ${{ secrets.SHINYAPPS_SECRET }}

      - name: Deploy GPI app to shinyapps.io
        run: |
          Rscript -e "library(rsconnect);
                      rsconnect::deployApp(appDir = 'GPI', forceUpdate = TRUE)"
        env:
          SHINYAPPS_ACCOUNT: ${{ secrets.SHINYAPPS_ACCOUNT }}
          SHINYAPPS_TOKEN: ${{ secrets.SHINYAPPS_TOKEN }}
          SHINYAPPS_SECRET: ${{ secrets.SHINYAPPS_SECRET }}

      - name: Deploy Senegal_delta app to shinyapps.io
        run: |
          Rscript -e "library(rsconnect);
                      rsconnect::deployApp(appDir = 'Senegal_delta', forceUpdate = TRUE)"
        env:
          SHINYAPPS_ACCOUNT: ${{ secrets.SHINYAPPS_ACCOUNT }}
          SHINYAPPS_TOKEN: ${{ secrets.SHINYAPPS_TOKEN }}
          SHINYAPPS_SECRET: ${{ secrets.SHINYAPPS_SECRET }}

      - name: Deploy Summary_stats app to shinyapps.io
        run: |
          Rscript -e "library(rsconnect);
                      rsconnect::deployApp(appDir = 'Summary_stats', forceUpdate = TRUE)"
        env:
          SHINYAPPS_ACCOUNT: ${{ secrets.SHINYAPPS_ACCOUNT }}
          SHINYAPPS_TOKEN: ${{ secrets.SHINYAPPS_TOKEN }}
          SHINYAPPS_SECRET: ${{ secrets.SHINYAPPS_SECRET }}
