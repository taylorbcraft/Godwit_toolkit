name: Weekly GPS Update and Deploy to Shinyapps.io

on:
  schedule:
    - cron: '0 0 * * 1'  # runs once a week, every monday at midnight utc
  push:
    branches:
      - main  # deploy on push to main branch

jobs:
  update-gps-data:
    runs-on: ubuntu-20.04

    steps:
      - name: Check out repo
        uses: actions/checkout@v3

      - name: Set up R 4.4.2
        uses: r-lib/actions/setup-r@v2
        with:
          r-version: '4.4.2'

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libgdal-dev libproj-dev libgeos-dev libudunits2-dev gdal-bin
          wget -qO- https://quarto.org/download/latest/quarto-linux-amd64.deb > quarto.deb
          sudo dpkg -i quarto.deb

      - name: Install R packages
        run: |
          mkdir -p ~/R/library
          echo 'R_LIBS_USER="~/R/library"' >> ~/.Renviron
          Rscript -e "install.packages(c(
            'rnaturalearthdata', 'rnaturalearth', 'shiny', 'sf', 'cronR', 'move', 'dplyr',
            'purrr', 'data.table', 'zoo', 'lubridate', 'mapview', 's2', 'rsconnect',
            'leaflet', 'leaflet.extras', 'leafgl', 'terra', 'ggplot2', 'rnaturalearth'),
            repos='https://cloud.r-project.org', lib='~/R/library')"

      - name: Run location_data.R
        run: Rscript location_data.R

      - name: Run filter_location_data.R for Donana
        run: Rscript Donana_flooding/filter_location_data.R

      - name: Run filter_location_data.R for GPI
        run: Rscript GPI/filter_location_data.R

      - name: Run filter_location_data.R for Senegal Delta
        run: Rscript Senegal_delta/filter_location_data.R

      - name: Check R environment
        run: Rscript -e "sessionInfo()"

      - name: Deploy Donana_flooding app to shinyapps.io
        run: |
          Rscript -e "library(rsconnect);
                      rsconnect::setAccountInfo(name = '${{ secrets.SHINYAPPS_ACCOUNT }}',
                                                token = '${{ secrets.SHINYAPPS_TOKEN }}',
                                                secret = '${{ secrets.SHINYAPPS_SECRET }}');
                      rsconnect::deployApp(appDir = 'Donana_flooding', forceUpdate = TRUE)"
        env:
          SHINYAPPS_ACCOUNT: ${{ secrets.SHINYAPPS_ACCOUNT }}
          SHINYAPPS_TOKEN: ${{ secrets.SHINYAPPS_TOKEN }}
          SHINYAPPS_SECRET: ${{ secrets.SHINYAPPS_SECRET }}

      - name: Deploy GPI app to shinyapps.io
        run: |
          Rscript -e "library(rsconnect);
                      rsconnect::deployApp(appDir = 'GPI', forceUpdate = TRUE)"
        env:
          SHINYAPPS_ACCOUNT: ${{ secrets.SHINYAPPS_ACCOUNT }}
          SHINYAPPS_TOKEN: ${{ secrets.SHINYAPPS_TOKEN }}
          SHINYAPPS_SECRET: ${{ secrets.SHINYAPPS_SECRET }}

      - name: Deploy Senegal_delta app to shinyapps.io
        run: |
          Rscript -e "library(rsconnect);
                      rsconnect::deployApp(appDir = 'Senegal_delta', forceUpdate = TRUE)"
        env:
          SHINYAPPS_ACCOUNT: ${{ secrets.SHINYAPPS_ACCOUNT }}
          SHINYAPPS_TOKEN: ${{ secrets.SHINYAPPS_TOKEN }}
          SHINYAPPS_SECRET: ${{ secrets.SHINYAPPS_SECRET }}

      - name: Deploy Summary_stats app to shinyapps.io
        run: |
          Rscript -e "library(rsconnect);
                      rsconnect::deployApp(appDir = 'Summary_stats', forceUpdate = TRUE)"
        env:
          SHINYAPPS_ACCOUNT: ${{ secrets.SHINYAPPS_ACCOUNT }}
          SHINYAPPS_TOKEN: ${{ secrets.SHINYAPPS_TOKEN }}
          SHINYAPPS_SECRET: ${{ secrets.SHINYAPPS_SECRET }}
